# match on any token with ___, you can name a wildcard slot by using (entityName:___)
# group alternate tokens together using '(' ')' and '|' ==> (token1|token2|token3)
# put quantifiers on any token grouping...
#   '?' ==> zero or one
#   '*' ==> zero or more
#   '+' ==> one or more
#   '#' ==> max number of tokens to consume
#   '~' ==> use fuzzy matching for the tokens in the group.
# Entities can be placed into a pattern with '@', creating a compound entity result.
locale: en
macros:
  $placeRef: (be|sitting|at|in|the|from)+ (Place:___)*
entities:
  - name: Help
    patterns:
      - help

  - name: Greeting
    patterns:
      - hi
      - hello
      - howdy

  - name: Thanks
    patterns:
      - thank you
      - thanks
      - cool

  - name: Goodbye
    patterns:
    - bye
    - goodbye
    - good bye
    - see (you|ya)
    - catch (you|ya) later 

  - name: ChangeAlias
    patterns:
      - my alias (is|to) (alias:___)
      - (alias:___) is my alias
      - change my alias
      - set my alias
        
  - name: WhereQuery
    patterns:
      - "@WherePhrase (my)? (Person:___|and)+ (at|be|to|working)* (@dates)*"
  
  - name: WhoQuery
    patterns:
      - "@WhoPhrase (___)* $placeRef (@dates)?"

  - name : SetPlan
    patterns:
      - "@PlanPhrase (___)* $placeRef (@dates)*"
      - "@dates @PlanPhrase (___)* $placeRef"

  - name: '@PlanPhrase'
    patterns:
      - I will
      - I plan
      - My plan 
      - My schedule 
      - I'll 
      - (I'm|I am) 
      - (I'm|I am) 

  - name: WherePhrase
    patterns:
      - where will 
      - where is 
      - where are

  - name: WhoPhrase
    patterns:
      - who
      - who is 
      - who will
      - who'll

  - name: dates
    patterns:
      - "(on)? @datetime ((and|or|also)* (@datetime)+)*"
      - "@datetimeV2.set ((and|or|also)* (@datetimeV2.set)+)*"
      
