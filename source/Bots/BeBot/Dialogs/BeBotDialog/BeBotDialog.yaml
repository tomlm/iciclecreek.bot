# match on any token with ___, you can name a wildcard slot by using (entityName:___)
# group alternate tokens together using '(' ')' and '|' ==> (token1|token2|token3)
# put quantifiers on any token grouping...
#   '?' ==> zero or one
#   '*' ==> zero or more
#   '+' ==> one or more
#   '#' ==> max number of tokens to consume
#   '~' ==> use fuzzy matching for the tokens in the group.
# Entities can be placed into a pattern with '@', creating a compound entity result.
locale: en
externalEntities: [mention, datetime]
entities:
  - name: ChangeAlias
    patterns:
      - my alias (is|to) (alias:___)
      - (alias:___) is my alias
      - change my alias
      - set my alias
      - reset my alias
        
  - name: WhereQuery
    patterns:
      - where will 
      - where is 
      - where are
  
  - name: WhoQuery
    patterns:
      - who
      - who is 
      - who will
      - who'll

  - name: SetPlan
    patterns:
      - "@PlanPhrase (___)* ((@datetime|@datetimeV2.set))*"
      - "(@datetime|@datetimeV2.set) @PlanPhrase"
      - "@PlanPhrase"

  - name: '@PlanPhrase'
    patterns:
      - I will
      - I plan
      - My plan 
      - My schedule 
      - I'll 
      - (I'm|I am) 
      - (I'm|I am) 
      - set my plan

