using AdaptiveExpressions.Converters;
using Microsoft.Bot.Builder;
using Microsoft.Bot.Builder.Dialogs.Debugging;
using Microsoft.Bot.Builder.Dialogs.Declarative;
using Microsoft.Bot.Builder.Dialogs.Declarative.Resources;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace Iciclecreek.Bot.Builder.Dialogs.Adaptive.GitHub
{
    public class GitHubUserComponentRegistration : ComponentRegistration, IComponentDeclarativeTypes
    {
        public IEnumerable<DeclarativeType> GetDeclarativeTypes(ResourceExplorer resourceExplorer)
        {
            yield return new DeclarativeType<GitHubClient.User.Current>(GitHubClient.User.Current.Kind);
            yield return new DeclarativeType<GitHubClient.User.Get>(GitHubClient.User.Get.Kind);
            yield return new DeclarativeType<GitHubClient.User.Update>(GitHubClient.User.Update.Kind);
            yield return new DeclarativeType<GitHubClient.User.GpgKey.Create>(GitHubClient.User.GpgKey.Create.Kind);
            yield return new DeclarativeType<GitHubClient.User.GpgKey.Delete>(GitHubClient.User.GpgKey.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.User.GpgKey.Get>(GitHubClient.User.GpgKey.Get.Kind);
            yield return new DeclarativeType<GitHubClient.User.GpgKey.GetAllForCurrent>(GitHubClient.User.GpgKey.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.User.GitSshKey.Create>(GitHubClient.User.GitSshKey.Create.Kind);
            yield return new DeclarativeType<GitHubClient.User.GitSshKey.Delete>(GitHubClient.User.GitSshKey.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.User.GitSshKey.Get>(GitHubClient.User.GitSshKey.Get.Kind);
            yield return new DeclarativeType<GitHubClient.User.GitSshKey.GetAll>(GitHubClient.User.GitSshKey.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.User.GitSshKey.GetAllForCurrent>(GitHubClient.User.GitSshKey.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.Follow>(GitHubClient.User.Followers.Follow.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.GetAll>(GitHubClient.User.Followers.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.GetAllFollowing>(GitHubClient.User.Followers.GetAllFollowing.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.GetAllFollowingForCurrent>(GitHubClient.User.Followers.GetAllFollowingForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.GetAllForCurrent>(GitHubClient.User.Followers.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.IsFollowing>(GitHubClient.User.Followers.IsFollowing.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.IsFollowingForCurrent>(GitHubClient.User.Followers.IsFollowingForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.User.Followers.Unfollow>(GitHubClient.User.Followers.Unfollow.Kind);
            yield return new DeclarativeType<GitHubClient.User.Email.Add>(GitHubClient.User.Email.Add.Kind);
            yield return new DeclarativeType<GitHubClient.User.Email.Delete>(GitHubClient.User.Email.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.User.Email.GetAll>(GitHubClient.User.Email.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Create>(GitHubClient.User.Administration.Create.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.CreateImpersonationToken>(GitHubClient.User.Administration.CreateImpersonationToken.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Delete>(GitHubClient.User.Administration.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.DeleteImpersonationToken>(GitHubClient.User.Administration.DeleteImpersonationToken.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.DeletePublicKey>(GitHubClient.User.Administration.DeletePublicKey.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Demote>(GitHubClient.User.Administration.Demote.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.ListAllPublicKeys>(GitHubClient.User.Administration.ListAllPublicKeys.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Promote>(GitHubClient.User.Administration.Promote.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Rename>(GitHubClient.User.Administration.Rename.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Suspend>(GitHubClient.User.Administration.Suspend.Kind);
            yield return new DeclarativeType<GitHubClient.User.Administration.Unsuspend>(GitHubClient.User.Administration.Unsuspend.Kind);
            yield return new DeclarativeType<GitHubClient.Search.SearchCode>(GitHubClient.Search.SearchCode.Kind);
            yield return new DeclarativeType<GitHubClient.Search.SearchIssues>(GitHubClient.Search.SearchIssues.Kind);
            yield return new DeclarativeType<GitHubClient.Search.SearchLabels>(GitHubClient.Search.SearchLabels.Kind);
            yield return new DeclarativeType<GitHubClient.Search.SearchRepo>(GitHubClient.Search.SearchRepo.Kind);
            yield return new DeclarativeType<GitHubClient.Search.SearchUsers>(GitHubClient.Search.SearchUsers.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Create>(GitHubClient.Repository.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Delete>(GitHubClient.Repository.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Edit>(GitHubClient.Repository.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Get>(GitHubClient.Repository.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllContributors>(GitHubClient.Repository.GetAllContributors.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllForCurrent>(GitHubClient.Repository.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllForOrg>(GitHubClient.Repository.GetAllForOrg.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllForUser>(GitHubClient.Repository.GetAllForUser.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllLanguages>(GitHubClient.Repository.GetAllLanguages.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllPublic>(GitHubClient.Repository.GetAllPublic.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllTags>(GitHubClient.Repository.GetAllTags.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetAllTeams>(GitHubClient.Repository.GetAllTeams.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.GetLicenseContents>(GitHubClient.Repository.GetLicenseContents.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Transfer>(GitHubClient.Repository.Transfer.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Traffic.GetAllPaths>(GitHubClient.Repository.Traffic.GetAllPaths.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Traffic.GetAllReferrers>(GitHubClient.Repository.Traffic.GetAllReferrers.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Traffic.GetClones>(GitHubClient.Repository.Traffic.GetClones.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Traffic.GetViews>(GitHubClient.Repository.Traffic.GetViews.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Status.Create>(GitHubClient.Repository.Status.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Status.GetAll>(GitHubClient.Repository.Status.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Status.GetCombined>(GitHubClient.Repository.Status.GetCombined.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Statistics.GetCodeFrequency>(GitHubClient.Repository.Statistics.GetCodeFrequency.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Statistics.GetCommitActivity>(GitHubClient.Repository.Statistics.GetCommitActivity.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Statistics.GetContributors>(GitHubClient.Repository.Statistics.GetContributors.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Statistics.GetParticipation>(GitHubClient.Repository.Statistics.GetParticipation.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Statistics.GetPunchCard>(GitHubClient.Repository.Statistics.GetPunchCard.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.Create>(GitHubClient.Repository.Release.Create.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.Delete>(GitHubClient.Repository.Release.Delete.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.DeleteAsset>(GitHubClient.Repository.Release.DeleteAsset.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.Edit>(GitHubClient.Repository.Release.Edit.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.EditAsset>(GitHubClient.Repository.Release.EditAsset.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.Get>(GitHubClient.Repository.Release.Get.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.GetAll>(GitHubClient.Repository.Release.GetAll.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.GetAllAssets>(GitHubClient.Repository.Release.GetAllAssets.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.GetAsset>(GitHubClient.Repository.Release.GetAsset.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.GetLatest>(GitHubClient.Repository.Release.GetLatest.Kind);
            //yield return new DeclarativeType<GitHubClient.Repository.Release.UploadAsset>(GitHubClient.Repository.Release.UploadAsset.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Commits>(GitHubClient.Repository.PullRequest.Commits.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Create>(GitHubClient.Repository.PullRequest.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Files>(GitHubClient.Repository.PullRequest.Files.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Get>(GitHubClient.Repository.PullRequest.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.GetAllForRepository>(GitHubClient.Repository.PullRequest.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Merge>(GitHubClient.Repository.PullRequest.Merge.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Merged>(GitHubClient.Repository.PullRequest.Merged.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Update>(GitHubClient.Repository.PullRequest.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.Create>(GitHubClient.Repository.PullRequest.Review.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.Delete>(GitHubClient.Repository.PullRequest.Review.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.Dismiss>(GitHubClient.Repository.PullRequest.Review.Dismiss.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.Get>(GitHubClient.Repository.PullRequest.Review.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.GetAll>(GitHubClient.Repository.PullRequest.Review.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.GetAllComments>(GitHubClient.Repository.PullRequest.Review.GetAllComments.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.Review.Submit>(GitHubClient.Repository.PullRequest.Review.Submit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewRequest.Create>(GitHubClient.Repository.PullRequest.ReviewRequest.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewRequest.Delete>(GitHubClient.Repository.PullRequest.ReviewRequest.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewRequest.Get>(GitHubClient.Repository.PullRequest.ReviewRequest.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.Create>(GitHubClient.Repository.PullRequest.ReviewComment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.CreateReply>(GitHubClient.Repository.PullRequest.ReviewComment.CreateReply.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.Delete>(GitHubClient.Repository.PullRequest.ReviewComment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.Edit>(GitHubClient.Repository.PullRequest.ReviewComment.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.GetAll>(GitHubClient.Repository.PullRequest.ReviewComment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.GetAllForRepository>(GitHubClient.Repository.PullRequest.ReviewComment.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.PullRequest.ReviewComment.GetComment>(GitHubClient.Repository.PullRequest.ReviewComment.GetComment.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.CreateForOrganization>(GitHubClient.Repository.Project.CreateForOrganization.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.CreateForRepository>(GitHubClient.Repository.Project.CreateForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Delete>(GitHubClient.Repository.Project.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Get>(GitHubClient.Repository.Project.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.GetAllForOrganization>(GitHubClient.Repository.Project.GetAllForOrganization.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.GetAllForRepository>(GitHubClient.Repository.Project.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Update>(GitHubClient.Repository.Project.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.Create>(GitHubClient.Repository.Project.Column.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.Delete>(GitHubClient.Repository.Project.Column.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.Get>(GitHubClient.Repository.Project.Column.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.GetAll>(GitHubClient.Repository.Project.Column.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.Move>(GitHubClient.Repository.Project.Column.Move.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Column.Update>(GitHubClient.Repository.Project.Column.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.Create>(GitHubClient.Repository.Project.Card.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.Delete>(GitHubClient.Repository.Project.Card.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.Get>(GitHubClient.Repository.Project.Card.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.GetAll>(GitHubClient.Repository.Project.Card.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.Move>(GitHubClient.Repository.Project.Card.Move.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Project.Card.Update>(GitHubClient.Repository.Project.Card.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Page.Get>(GitHubClient.Repository.Page.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Page.GetAll>(GitHubClient.Repository.Page.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Page.GetLatest>(GitHubClient.Repository.Page.GetLatest.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Page.RequestPageBuild>(GitHubClient.Repository.Page.RequestPageBuild.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Merging.Create>(GitHubClient.Repository.Merging.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.Accept>(GitHubClient.Repository.Invitation.Accept.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.Decline>(GitHubClient.Repository.Invitation.Decline.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.Delete>(GitHubClient.Repository.Invitation.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.Edit>(GitHubClient.Repository.Invitation.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.GetAllForCurrent>(GitHubClient.Repository.Invitation.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Invitation.GetAllForRepository>(GitHubClient.Repository.Invitation.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Create>(GitHubClient.Repository.Hooks.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Delete>(GitHubClient.Repository.Hooks.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Edit>(GitHubClient.Repository.Hooks.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Get>(GitHubClient.Repository.Hooks.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.GetAll>(GitHubClient.Repository.Hooks.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Ping>(GitHubClient.Repository.Hooks.Ping.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Hooks.Test>(GitHubClient.Repository.Hooks.Test.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Forks.Create>(GitHubClient.Repository.Forks.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Forks.GetAll>(GitHubClient.Repository.Forks.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Deployment.Create>(GitHubClient.Repository.Deployment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Deployment.GetAll>(GitHubClient.Repository.Deployment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Deployment.Status.Create>(GitHubClient.Repository.Deployment.Status.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Deployment.Status.GetAll>(GitHubClient.Repository.Deployment.Status.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.DeployKeys.Create>(GitHubClient.Repository.DeployKeys.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.DeployKeys.Delete>(GitHubClient.Repository.DeployKeys.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.DeployKeys.Get>(GitHubClient.Repository.DeployKeys.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.DeployKeys.GetAll>(GitHubClient.Repository.DeployKeys.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.CreateFile>(GitHubClient.Repository.Content.CreateFile.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.DeleteFile>(GitHubClient.Repository.Content.DeleteFile.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetAllContents>(GitHubClient.Repository.Content.GetAllContents.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetAllContentsByRef>(GitHubClient.Repository.Content.GetAllContentsByRef.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetArchive>(GitHubClient.Repository.Content.GetArchive.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetRawContent>(GitHubClient.Repository.Content.GetRawContent.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetRawContentByRef>(GitHubClient.Repository.Content.GetRawContentByRef.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetReadme>(GitHubClient.Repository.Content.GetReadme.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.GetReadmeHtml>(GitHubClient.Repository.Content.GetReadmeHtml.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Content.UpdateFile>(GitHubClient.Repository.Content.UpdateFile.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Commit.Compare>(GitHubClient.Repository.Commit.Compare.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Commit.Get>(GitHubClient.Repository.Commit.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Commit.GetAll>(GitHubClient.Repository.Commit.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Commit.GetSha1>(GitHubClient.Repository.Commit.GetSha1.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.Create>(GitHubClient.Repository.Comment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.Delete>(GitHubClient.Repository.Comment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.Get>(GitHubClient.Repository.Comment.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.GetAllForCommit>(GitHubClient.Repository.Comment.GetAllForCommit.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.GetAllForRepository>(GitHubClient.Repository.Comment.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Comment.Update>(GitHubClient.Repository.Comment.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.Add>(GitHubClient.Repository.Collaborator.Add.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.Delete>(GitHubClient.Repository.Collaborator.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.GetAll>(GitHubClient.Repository.Collaborator.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.Invite>(GitHubClient.Repository.Collaborator.Invite.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.IsCollaborator>(GitHubClient.Repository.Collaborator.IsCollaborator.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Collaborator.ReviewPermission>(GitHubClient.Repository.Collaborator.ReviewPermission.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.AddAdminEnforcement>(GitHubClient.Repository.Branch.AddAdminEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.AddProtectedBranchTeamRestrictions>(GitHubClient.Repository.Branch.AddProtectedBranchTeamRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.AddProtectedBranchUserRestrictions>(GitHubClient.Repository.Branch.AddProtectedBranchUserRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.AddRequiredStatusChecksContexts>(GitHubClient.Repository.Branch.AddRequiredStatusChecksContexts.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteBranchProtection>(GitHubClient.Repository.Branch.DeleteBranchProtection.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteProtectedBranchRestrictions>(GitHubClient.Repository.Branch.DeleteProtectedBranchRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteProtectedBranchTeamRestrictions>(GitHubClient.Repository.Branch.DeleteProtectedBranchTeamRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteProtectedBranchUserRestrictions>(GitHubClient.Repository.Branch.DeleteProtectedBranchUserRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteRequiredStatusChecks>(GitHubClient.Repository.Branch.DeleteRequiredStatusChecks.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.DeleteRequiredStatusChecksContexts>(GitHubClient.Repository.Branch.DeleteRequiredStatusChecksContexts.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.Get>(GitHubClient.Repository.Branch.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetAdminEnforcement>(GitHubClient.Repository.Branch.GetAdminEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetAll>(GitHubClient.Repository.Branch.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetAllProtectedBranchTeamRestrictions>(GitHubClient.Repository.Branch.GetAllProtectedBranchTeamRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetAllProtectedBranchUserRestrictions>(GitHubClient.Repository.Branch.GetAllProtectedBranchUserRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetAllRequiredStatusChecksContexts>(GitHubClient.Repository.Branch.GetAllRequiredStatusChecksContexts.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetBranchProtection>(GitHubClient.Repository.Branch.GetBranchProtection.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetProtectedBranchRestrictions>(GitHubClient.Repository.Branch.GetProtectedBranchRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetRequiredStatusChecks>(GitHubClient.Repository.Branch.GetRequiredStatusChecks.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.GetReviewEnforcement>(GitHubClient.Repository.Branch.GetReviewEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.RemoveAdminEnforcement>(GitHubClient.Repository.Branch.RemoveAdminEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.RemoveReviewEnforcement>(GitHubClient.Repository.Branch.RemoveReviewEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateBranchProtection>(GitHubClient.Repository.Branch.UpdateBranchProtection.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateProtectedBranchTeamRestrictions>(GitHubClient.Repository.Branch.UpdateProtectedBranchTeamRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateProtectedBranchUserRestrictions>(GitHubClient.Repository.Branch.UpdateProtectedBranchUserRestrictions.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateRequiredStatusChecks>(GitHubClient.Repository.Branch.UpdateRequiredStatusChecks.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateRequiredStatusChecksContexts>(GitHubClient.Repository.Branch.UpdateRequiredStatusChecksContexts.Kind);
            yield return new DeclarativeType<GitHubClient.Repository.Branch.UpdateReviewEnforcement>(GitHubClient.Repository.Branch.UpdateReviewEnforcement.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.Delete>(GitHubClient.Reaction.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.PullRequestReviewComment.Create>(GitHubClient.Reaction.PullRequestReviewComment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.PullRequestReviewComment.GetAll>(GitHubClient.Reaction.PullRequestReviewComment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.Issue.Create>(GitHubClient.Reaction.Issue.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.Issue.GetAll>(GitHubClient.Reaction.Issue.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.IssueComment.Create>(GitHubClient.Reaction.IssueComment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.IssueComment.GetAll>(GitHubClient.Reaction.IssueComment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.CommitComment.Create>(GitHubClient.Reaction.CommitComment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Reaction.CommitComment.GetAll>(GitHubClient.Reaction.CommitComment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Commits>(GitHubClient.PullRequest.Commits.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Create>(GitHubClient.PullRequest.Create.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Files>(GitHubClient.PullRequest.Files.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Get>(GitHubClient.PullRequest.Get.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.GetAllForRepository>(GitHubClient.PullRequest.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Merge>(GitHubClient.PullRequest.Merge.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Merged>(GitHubClient.PullRequest.Merged.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Update>(GitHubClient.PullRequest.Update.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.Create>(GitHubClient.PullRequest.Review.Create.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.Delete>(GitHubClient.PullRequest.Review.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.Dismiss>(GitHubClient.PullRequest.Review.Dismiss.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.Get>(GitHubClient.PullRequest.Review.Get.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.GetAll>(GitHubClient.PullRequest.Review.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.GetAllComments>(GitHubClient.PullRequest.Review.GetAllComments.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.Review.Submit>(GitHubClient.PullRequest.Review.Submit.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewRequest.Create>(GitHubClient.PullRequest.ReviewRequest.Create.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewRequest.Delete>(GitHubClient.PullRequest.ReviewRequest.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewRequest.Get>(GitHubClient.PullRequest.ReviewRequest.Get.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.Create>(GitHubClient.PullRequest.ReviewComment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.CreateReply>(GitHubClient.PullRequest.ReviewComment.CreateReply.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.Delete>(GitHubClient.PullRequest.ReviewComment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.Edit>(GitHubClient.PullRequest.ReviewComment.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.GetAll>(GitHubClient.PullRequest.ReviewComment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.GetAllForRepository>(GitHubClient.PullRequest.ReviewComment.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.PullRequest.ReviewComment.GetComment>(GitHubClient.PullRequest.ReviewComment.GetComment.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Get>(GitHubClient.Organization.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.GetAll>(GitHubClient.Organization.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.GetAllForCurrent>(GitHubClient.Organization.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.GetAllForUser>(GitHubClient.Organization.GetAllForUser.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Update>(GitHubClient.Organization.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.AddOrEditMembership>(GitHubClient.Organization.Team.AddOrEditMembership.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.AddRepository>(GitHubClient.Organization.Team.AddRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.Create>(GitHubClient.Organization.Team.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.Delete>(GitHubClient.Organization.Team.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.Get>(GitHubClient.Organization.Team.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAll>(GitHubClient.Organization.Team.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAllChildTeams>(GitHubClient.Organization.Team.GetAllChildTeams.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAllForCurrent>(GitHubClient.Organization.Team.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAllMembers>(GitHubClient.Organization.Team.GetAllMembers.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAllPendingInvitations>(GitHubClient.Organization.Team.GetAllPendingInvitations.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetAllRepositories>(GitHubClient.Organization.Team.GetAllRepositories.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.GetMembershipDetails>(GitHubClient.Organization.Team.GetMembershipDetails.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.IsRepositoryManagedByTeam>(GitHubClient.Organization.Team.IsRepositoryManagedByTeam.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.RemoveMembership>(GitHubClient.Organization.Team.RemoveMembership.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.RemoveRepository>(GitHubClient.Organization.Team.RemoveRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Team.Update>(GitHubClient.Organization.Team.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.OutsideCollaborator.ConvertFromMember>(GitHubClient.Organization.OutsideCollaborator.ConvertFromMember.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.OutsideCollaborator.Delete>(GitHubClient.Organization.OutsideCollaborator.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.OutsideCollaborator.GetAll>(GitHubClient.Organization.OutsideCollaborator.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.AddOrUpdateOrganizationMembership>(GitHubClient.Organization.Member.AddOrUpdateOrganizationMembership.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.CheckMember>(GitHubClient.Organization.Member.CheckMember.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.CheckMemberPublic>(GitHubClient.Organization.Member.CheckMemberPublic.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.Conceal>(GitHubClient.Organization.Member.Conceal.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.Delete>(GitHubClient.Organization.Member.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.GetAll>(GitHubClient.Organization.Member.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.GetAllPendingInvitations>(GitHubClient.Organization.Member.GetAllPendingInvitations.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.GetAllPublic>(GitHubClient.Organization.Member.GetAllPublic.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.GetOrganizationMembership>(GitHubClient.Organization.Member.GetOrganizationMembership.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.Publicize>(GitHubClient.Organization.Member.Publicize.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Member.RemoveOrganizationMembership>(GitHubClient.Organization.Member.RemoveOrganizationMembership.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.Create>(GitHubClient.Organization.Hook.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.Delete>(GitHubClient.Organization.Hook.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.Edit>(GitHubClient.Organization.Hook.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.Get>(GitHubClient.Organization.Hook.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.GetAll>(GitHubClient.Organization.Hook.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Organization.Hook.Ping>(GitHubClient.Organization.Hook.Ping.Kind);
            yield return new DeclarativeType<GitHubClient.Oauth.CreateAccessToken>(GitHubClient.Oauth.CreateAccessToken.Kind);
            yield return new DeclarativeType<GitHubClient.Oauth.GetGitHubLoginUrl>(GitHubClient.Oauth.GetGitHubLoginUrl.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetAllEmojis>(GitHubClient.Miscellaneous.GetAllEmojis.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetAllGitIgnoreTemplates>(GitHubClient.Miscellaneous.GetAllGitIgnoreTemplates.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetAllLicenses>(GitHubClient.Miscellaneous.GetAllLicenses.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetGitIgnoreTemplate>(GitHubClient.Miscellaneous.GetGitIgnoreTemplate.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetLicense>(GitHubClient.Miscellaneous.GetLicense.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetMetadata>(GitHubClient.Miscellaneous.GetMetadata.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.GetRateLimits>(GitHubClient.Miscellaneous.GetRateLimits.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.RenderArbitraryMarkdown>(GitHubClient.Miscellaneous.RenderArbitraryMarkdown.Kind);
            yield return new DeclarativeType<GitHubClient.Miscellaneous.RenderRawMarkdown>(GitHubClient.Miscellaneous.RenderRawMarkdown.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.DeleteArchive>(GitHubClient.Migration.Migrations.DeleteArchive.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.Get>(GitHubClient.Migration.Migrations.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.GetAll>(GitHubClient.Migration.Migrations.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.GetArchive>(GitHubClient.Migration.Migrations.GetArchive.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.Start>(GitHubClient.Migration.Migrations.Start.Kind);
            yield return new DeclarativeType<GitHubClient.Migration.Migrations.UnlockRepository>(GitHubClient.Migration.Migrations.UnlockRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Create>(GitHubClient.Issue.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Get>(GitHubClient.Issue.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.GetAllForCurrent>(GitHubClient.Issue.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.GetAllForOrganization>(GitHubClient.Issue.GetAllForOrganization.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.GetAllForOwnedAndMemberRepositories>(GitHubClient.Issue.GetAllForOwnedAndMemberRepositories.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.GetAllForRepository>(GitHubClient.Issue.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Lock>(GitHubClient.Issue.Lock.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Unlock>(GitHubClient.Issue.Unlock.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Update>(GitHubClient.Issue.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Timeline.GetAllForIssue>(GitHubClient.Issue.Timeline.GetAllForIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Milestone.Create>(GitHubClient.Issue.Milestone.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Milestone.Delete>(GitHubClient.Issue.Milestone.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Milestone.Get>(GitHubClient.Issue.Milestone.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Milestone.GetAllForRepository>(GitHubClient.Issue.Milestone.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Milestone.Update>(GitHubClient.Issue.Milestone.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.AddToIssue>(GitHubClient.Issue.Labels.AddToIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.Create>(GitHubClient.Issue.Labels.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.Delete>(GitHubClient.Issue.Labels.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.Get>(GitHubClient.Issue.Labels.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.GetAllForIssue>(GitHubClient.Issue.Labels.GetAllForIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.GetAllForMilestone>(GitHubClient.Issue.Labels.GetAllForMilestone.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.GetAllForRepository>(GitHubClient.Issue.Labels.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.RemoveAllFromIssue>(GitHubClient.Issue.Labels.RemoveAllFromIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.RemoveFromIssue>(GitHubClient.Issue.Labels.RemoveFromIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.ReplaceAllForIssue>(GitHubClient.Issue.Labels.ReplaceAllForIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Labels.Update>(GitHubClient.Issue.Labels.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Events.Get>(GitHubClient.Issue.Events.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Events.GetAllForIssue>(GitHubClient.Issue.Events.GetAllForIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Events.GetAllForRepository>(GitHubClient.Issue.Events.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.Create>(GitHubClient.Issue.Comment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.Delete>(GitHubClient.Issue.Comment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.Get>(GitHubClient.Issue.Comment.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.GetAllForIssue>(GitHubClient.Issue.Comment.GetAllForIssue.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.GetAllForRepository>(GitHubClient.Issue.Comment.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Comment.Update>(GitHubClient.Issue.Comment.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Assignee.AddAssignees>(GitHubClient.Issue.Assignee.AddAssignees.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Assignee.CheckAssignee>(GitHubClient.Issue.Assignee.CheckAssignee.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Assignee.GetAllForRepository>(GitHubClient.Issue.Assignee.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Issue.Assignee.RemoveAssignees>(GitHubClient.Issue.Assignee.RemoveAssignees.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Tree.Create>(GitHubClient.Git.Tree.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Tree.Get>(GitHubClient.Git.Tree.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Tree.GetRecursive>(GitHubClient.Git.Tree.GetRecursive.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Tag.Create>(GitHubClient.Git.Tag.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Tag.Get>(GitHubClient.Git.Tag.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.Create>(GitHubClient.Git.Reference.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.Delete>(GitHubClient.Git.Reference.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.Get>(GitHubClient.Git.Reference.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.GetAll>(GitHubClient.Git.Reference.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.GetAllForSubNamespace>(GitHubClient.Git.Reference.GetAllForSubNamespace.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Reference.Update>(GitHubClient.Git.Reference.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Commit.Create>(GitHubClient.Git.Commit.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Commit.Get>(GitHubClient.Git.Commit.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Blob.Create>(GitHubClient.Git.Blob.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Git.Blob.Get>(GitHubClient.Git.Blob.Get.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.CreateInstallationToken>(GitHubClient.GitHubApps.CreateInstallationToken.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.Get>(GitHubClient.GitHubApps.Get.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetAllInstallationsForCurrent>(GitHubClient.GitHubApps.GetAllInstallationsForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetAllInstallationsForCurrentUser>(GitHubClient.GitHubApps.GetAllInstallationsForCurrentUser.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetCurrent>(GitHubClient.GitHubApps.GetCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetInstallation>(GitHubClient.GitHubApps.GetInstallation.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetInstallationForCurrent>(GitHubClient.GitHubApps.GetInstallationForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetOrganizationInstallationForCurrent>(GitHubClient.GitHubApps.GetOrganizationInstallationForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetRepositoryInstallationForCurrent>(GitHubClient.GitHubApps.GetRepositoryInstallationForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.GetUserInstallationForCurrent>(GitHubClient.GitHubApps.GetUserInstallationForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.Installation.GetAllRepositoriesForCurrent>(GitHubClient.GitHubApps.Installation.GetAllRepositoriesForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.GitHubApps.Installation.GetAllRepositoriesForCurrentUser>(GitHubClient.GitHubApps.Installation.GetAllRepositoriesForCurrentUser.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Create>(GitHubClient.Gist.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Delete>(GitHubClient.Gist.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Edit>(GitHubClient.Gist.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Fork>(GitHubClient.Gist.Fork.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Get>(GitHubClient.Gist.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAll>(GitHubClient.Gist.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAllCommits>(GitHubClient.Gist.GetAllCommits.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAllForks>(GitHubClient.Gist.GetAllForks.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAllForUser>(GitHubClient.Gist.GetAllForUser.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAllPublic>(GitHubClient.Gist.GetAllPublic.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.GetAllStarred>(GitHubClient.Gist.GetAllStarred.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.IsStarred>(GitHubClient.Gist.IsStarred.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Star>(GitHubClient.Gist.Star.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Unstar>(GitHubClient.Gist.Unstar.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Comment.Create>(GitHubClient.Gist.Comment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Comment.Delete>(GitHubClient.Gist.Comment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Comment.Get>(GitHubClient.Gist.Comment.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Comment.GetAllForGist>(GitHubClient.Gist.Comment.GetAllForGist.Kind);
            yield return new DeclarativeType<GitHubClient.Gist.Comment.Update>(GitHubClient.Gist.Comment.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.SearchIndexing.Queue>(GitHubClient.Enterprise.SearchIndexing.Queue.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.SearchIndexing.QueueAll>(GitHubClient.Enterprise.SearchIndexing.QueueAll.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.SearchIndexing.QueueAllCode>(GitHubClient.Enterprise.SearchIndexing.QueueAllCode.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.SearchIndexing.QueueAllIssues>(GitHubClient.Enterprise.SearchIndexing.QueueAllIssues.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.Create>(GitHubClient.Enterprise.PreReceiveEnvironment.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.Delete>(GitHubClient.Enterprise.PreReceiveEnvironment.Delete.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.DownloadStatus>(GitHubClient.Enterprise.PreReceiveEnvironment.DownloadStatus.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.Edit>(GitHubClient.Enterprise.PreReceiveEnvironment.Edit.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.Get>(GitHubClient.Enterprise.PreReceiveEnvironment.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.GetAll>(GitHubClient.Enterprise.PreReceiveEnvironment.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.PreReceiveEnvironment.TriggerDownload>(GitHubClient.Enterprise.PreReceiveEnvironment.TriggerDownload.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.Organization.Create>(GitHubClient.Enterprise.Organization.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.ManagementConsole.EditMaintenanceMode>(GitHubClient.Enterprise.ManagementConsole.EditMaintenanceMode.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.ManagementConsole.GetMaintenanceMode>(GitHubClient.Enterprise.ManagementConsole.GetMaintenanceMode.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.License.Get>(GitHubClient.Enterprise.License.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.Ldap.QueueSyncTeamMapping>(GitHubClient.Enterprise.Ldap.QueueSyncTeamMapping.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.Ldap.QueueSyncUserMapping>(GitHubClient.Enterprise.Ldap.QueueSyncUserMapping.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.Ldap.UpdateTeamMapping>(GitHubClient.Enterprise.Ldap.UpdateTeamMapping.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.Ldap.UpdateUserMapping>(GitHubClient.Enterprise.Ldap.UpdateUserMapping.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsAll>(GitHubClient.Enterprise.AdminStats.GetStatisticsAll.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsComments>(GitHubClient.Enterprise.AdminStats.GetStatisticsComments.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsGists>(GitHubClient.Enterprise.AdminStats.GetStatisticsGists.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsHooks>(GitHubClient.Enterprise.AdminStats.GetStatisticsHooks.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsIssues>(GitHubClient.Enterprise.AdminStats.GetStatisticsIssues.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsMilestones>(GitHubClient.Enterprise.AdminStats.GetStatisticsMilestones.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsOrgs>(GitHubClient.Enterprise.AdminStats.GetStatisticsOrgs.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsPages>(GitHubClient.Enterprise.AdminStats.GetStatisticsPages.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsPulls>(GitHubClient.Enterprise.AdminStats.GetStatisticsPulls.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsRepos>(GitHubClient.Enterprise.AdminStats.GetStatisticsRepos.Kind);
            yield return new DeclarativeType<GitHubClient.Enterprise.AdminStats.GetStatisticsUsers>(GitHubClient.Enterprise.AdminStats.GetStatisticsUsers.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Suite.Create>(GitHubClient.Check.Suite.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Suite.Get>(GitHubClient.Check.Suite.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Suite.GetAllForReference>(GitHubClient.Check.Suite.GetAllForReference.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Suite.Rerequest>(GitHubClient.Check.Suite.Rerequest.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Suite.UpdatePreferences>(GitHubClient.Check.Suite.UpdatePreferences.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.Create>(GitHubClient.Check.Run.Create.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.Get>(GitHubClient.Check.Run.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.GetAllAnnotations>(GitHubClient.Check.Run.GetAllAnnotations.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.GetAllForCheckSuite>(GitHubClient.Check.Run.GetAllForCheckSuite.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.GetAllForReference>(GitHubClient.Check.Run.GetAllForReference.Kind);
            yield return new DeclarativeType<GitHubClient.Check.Run.Update>(GitHubClient.Check.Run.Update.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.CheckWatched>(GitHubClient.Activity.Watching.CheckWatched.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.GetAllForCurrent>(GitHubClient.Activity.Watching.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.GetAllForUser>(GitHubClient.Activity.Watching.GetAllForUser.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.GetAllWatchers>(GitHubClient.Activity.Watching.GetAllWatchers.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.UnwatchRepo>(GitHubClient.Activity.Watching.UnwatchRepo.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Watching.WatchRepo>(GitHubClient.Activity.Watching.WatchRepo.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.CheckStarred>(GitHubClient.Activity.Starring.CheckStarred.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllForCurrent>(GitHubClient.Activity.Starring.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllForCurrentWithTimestamps>(GitHubClient.Activity.Starring.GetAllForCurrentWithTimestamps.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllForUser>(GitHubClient.Activity.Starring.GetAllForUser.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllForUserWithTimestamps>(GitHubClient.Activity.Starring.GetAllForUserWithTimestamps.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllStargazers>(GitHubClient.Activity.Starring.GetAllStargazers.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.GetAllStargazersWithTimestamps>(GitHubClient.Activity.Starring.GetAllStargazersWithTimestamps.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.RemoveStarFromRepo>(GitHubClient.Activity.Starring.RemoveStarFromRepo.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Starring.StarRepo>(GitHubClient.Activity.Starring.StarRepo.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.DeleteThreadSubscription>(GitHubClient.Activity.Notifications.DeleteThreadSubscription.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.Get>(GitHubClient.Activity.Notifications.Get.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.GetAllForCurrent>(GitHubClient.Activity.Notifications.GetAllForCurrent.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.GetAllForRepository>(GitHubClient.Activity.Notifications.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.GetThreadSubscription>(GitHubClient.Activity.Notifications.GetThreadSubscription.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.MarkAsRead>(GitHubClient.Activity.Notifications.MarkAsRead.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.MarkAsReadForRepository>(GitHubClient.Activity.Notifications.MarkAsReadForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Notifications.SetThreadSubscription>(GitHubClient.Activity.Notifications.SetThreadSubscription.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Feeds.GetFeeds>(GitHubClient.Activity.Feeds.GetFeeds.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAll>(GitHubClient.Activity.Events.GetAll.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllForAnOrganization>(GitHubClient.Activity.Events.GetAllForAnOrganization.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllForOrganization>(GitHubClient.Activity.Events.GetAllForOrganization.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllForRepository>(GitHubClient.Activity.Events.GetAllForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllForRepositoryNetwork>(GitHubClient.Activity.Events.GetAllForRepositoryNetwork.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllIssuesForRepository>(GitHubClient.Activity.Events.GetAllIssuesForRepository.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllUserPerformed>(GitHubClient.Activity.Events.GetAllUserPerformed.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllUserPerformedPublic>(GitHubClient.Activity.Events.GetAllUserPerformedPublic.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllUserReceived>(GitHubClient.Activity.Events.GetAllUserReceived.Kind);
            yield return new DeclarativeType<GitHubClient.Activity.Events.GetAllUserReceivedPublic>(GitHubClient.Activity.Events.GetAllUserReceivedPublic.Kind);
        }

        public IEnumerable<JsonConverter> GetConverters(ResourceExplorer resourceExplorer, SourceContext sourceContext)
        {
            yield return new ObjectExpressionConverter<Octokit.UserUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewGpgKey>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewPublicKey>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.String[]>();
            yield return new ObjectExpressionConverter<System.String[]>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewUser>();
            yield return new ObjectExpressionConverter<Octokit.NewImpersonationToken>();
            yield return new ObjectExpressionConverter<Octokit.UserRename>();
            yield return new ObjectExpressionConverter<Octokit.SearchCodeRequest>();
            yield return new ObjectExpressionConverter<Octokit.SearchIssuesRequest>();
            yield return new ObjectExpressionConverter<Octokit.SearchLabelsRequest>();
            yield return new ObjectExpressionConverter<Octokit.SearchRepositoriesRequest>();
            yield return new ObjectExpressionConverter<Octokit.SearchUsersRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewRepository>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.PublicRepositoryRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryTransfer>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryTrafficRequest>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryTrafficRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewCommitStatus>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.Threading.CancellationToken>();
            yield return new ObjectExpressionConverter<System.Threading.CancellationToken>();
            yield return new ObjectExpressionConverter<System.Threading.CancellationToken>();
            yield return new ObjectExpressionConverter<System.Threading.CancellationToken>();
            yield return new ObjectExpressionConverter<System.Threading.CancellationToken>();
            yield return new ObjectExpressionConverter<Octokit.NewRelease>();
            yield return new ObjectExpressionConverter<Octokit.ReleaseUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ReleaseAssetUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.Release>();
            yield return new ObjectExpressionConverter<Octokit.ReleaseAssetUpload>();
            yield return new ObjectExpressionConverter<Octokit.NewPullRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.MergePullRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestUpdate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewDismiss>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewSubmit>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentReplyCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentEdit>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewProject>();
            yield return new ObjectExpressionConverter<Octokit.NewProject>();
            yield return new ObjectExpressionConverter<Octokit.ProjectRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ProjectRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ProjectUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewProjectColumn>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ProjectColumnMove>();
            yield return new ObjectExpressionConverter<Octokit.ProjectColumnUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewProjectCard>();
            yield return new ObjectExpressionConverter<Octokit.ProjectCardRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ProjectCardMove>();
            yield return new ObjectExpressionConverter<Octokit.ProjectCardUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewMerge>();
            yield return new ObjectExpressionConverter<Octokit.InvitationUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewRepositoryHook>();
            yield return new ObjectExpressionConverter<Octokit.EditRepositoryHook>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewRepositoryFork>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryForksListRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewDeployment>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewDeploymentStatus>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewDeployKey>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CreateFileRequest>();
            yield return new ObjectExpressionConverter<Octokit.DeleteFileRequest>();
            yield return new ObjectExpressionConverter<Octokit.ArchiveFormat>();
            yield return new ObjectExpressionConverter<System.TimeSpan>();
            yield return new ObjectExpressionConverter<Octokit.UpdateFileRequest>();
            yield return new ObjectExpressionConverter<Octokit.CommitRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewCommitComment>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CollaboratorRequest>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryCollaboratorListRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CollaboratorRequest>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionTeamCollection>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionUserCollection>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionTeamCollection>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionUserCollection>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionSettingsUpdate>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionTeamCollection>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionUserCollection>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionRequiredStatusChecksUpdate>();
            yield return new ObjectExpressionConverter<Octokit.BranchProtectionRequiredReviewsUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewReaction>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewReaction>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewReaction>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewReaction>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewPullRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.MergePullRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestUpdate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewDismiss>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewSubmit>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewRequest>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentReplyCreate>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentEdit>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.PullRequestReviewCommentRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationUpdate>();
            yield return new ObjectExpressionConverter<Octokit.UpdateTeamMembership>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryPermissionRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewTeam>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.TeamMembersRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.UpdateTeam>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationMembersFilter>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationMembershipUpdate>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationMembersFilter>();
            yield return new ObjectExpressionConverter<Octokit.OrganizationMembersRole>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewOrganizationHook>();
            yield return new ObjectExpressionConverter<Octokit.EditOrganizationHook>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.OauthTokenRequest>();
            yield return new ObjectExpressionConverter<Octokit.OauthLoginRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewArbitraryMarkdown>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.StartMigrationRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewIssue>();
            yield return new ObjectExpressionConverter<Octokit.IssueRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.IssueRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.IssueRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.RepositoryIssueRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.IssueUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewMilestone>();
            yield return new ObjectExpressionConverter<Octokit.MilestoneRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.MilestoneUpdate>();
            yield return new ObjectExpressionConverter<System.String[]>();
            yield return new ObjectExpressionConverter<Octokit.NewLabel>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.String[]>();
            yield return new ObjectExpressionConverter<Octokit.LabelUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.IssueCommentRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.IssueCommentRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.AssigneesUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.AssigneesUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewTree>();
            yield return new ObjectExpressionConverter<Octokit.NewTag>();
            yield return new ObjectExpressionConverter<Octokit.NewReference>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ReferenceUpdate>();
            yield return new ObjectExpressionConverter<Octokit.NewCommit>();
            yield return new ObjectExpressionConverter<Octokit.NewBlob>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewGist>();
            yield return new ObjectExpressionConverter<Octokit.GistUpdate>();
            yield return new ObjectExpressionConverter<System.DateTime>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.DateTime>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.DateTime>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<System.DateTime>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewPreReceiveEnvironment>();
            yield return new ObjectExpressionConverter<Octokit.UpdatePreReceiveEnvironment>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewOrganization>();
            yield return new ObjectExpressionConverter<Octokit.UpdateMaintenanceRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewLdapMapping>();
            yield return new ObjectExpressionConverter<Octokit.NewLdapMapping>();
            yield return new ObjectExpressionConverter<Octokit.NewCheckSuite>();
            yield return new ObjectExpressionConverter<Octokit.CheckSuiteRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CheckSuitePreferences>();
            yield return new ObjectExpressionConverter<Octokit.NewCheckRun>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CheckRunRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CheckRunRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.CheckRunUpdate>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NewSubscription>();
            yield return new ObjectExpressionConverter<Octokit.StarredRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.StarredRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.StarredRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.StarredRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NotificationsRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.NotificationsRequest>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.MarkAsReadRequest>();
            yield return new ObjectExpressionConverter<Octokit.MarkAsReadRequest>();
            yield return new ObjectExpressionConverter<Octokit.NewThreadSubscription>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield return new ObjectExpressionConverter<Octokit.ApiOptions>();
            yield break;
        }
    }
}
